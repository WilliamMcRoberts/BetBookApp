@inject NavigationManager navManager
@inject IGameData gameData

@if(BasicGameList is not null)
{
    int index = 0;
    foreach(BasicGameModel bg in BasicGameList)
    {
        <div class="game-container">
            <div class="away-team">
                <label class="local">Away</label>
                <p style="margin-top: .5em;">@bg.AwayTeamName</p>
                <div class="basic-record">
                    <p>@RecordsArray[index].Wins.Split('|').SkipLast(1).ToArray().Length<span class="dash">-</span></p>
                    <p>@RecordsArray[index].Losses.Split('|').SkipLast(1).ToArray().Length<span class="dash">-</span></p>
                    <p>@RecordsArray[index].Draws.Split('|').SkipLast(1).ToArray().Length</p>
                </div>
            </div>
            <div class="game-details">
                <ul class="game-info">
                    <li class="team-item">@bg.AwayTeamName at @bg.HomeTeamName || @bg.FavoriteTeamName - @bg.PointSpread points</li>
                </ul>
                <div class="bet-selection">
                    <div>
                        <button @onclick="(() => CreateBet(bg.GameId))" 
                            style="margin-bottom: 2em;" 
                            class="site-btn btn site-btn-light btn-sm text-uppercase">
                            Place A Wager On Game
                        </button>
                    </div>
                </div>
            </div>
            <div class="home-team">
                <label class="local">Home</label>
                <p style="margin-top: .5em;">@bg.HomeTeamName</p>
                <div class="basic-record">
                    <p>@RecordsArray[index + 1].Wins.Split('|').SkipLast(1).ToArray().Length<span class="dash">-</span></p>
                    <p>@RecordsArray[index + 1].Losses.Split('|').SkipLast(1).ToArray().Length<span class="dash">-</span></p>
                    <p>@RecordsArray[index + 1].Draws.Split('|').SkipLast(1).ToArray().Length</p>
                </div>
            </div>
        </div>
        index += 2;
    }
}
else
{
    <h1 class="title">There are no games currently available.</h1>
}


@code {

    [Parameter]
    public UserModel User { get; set; } = new();
    [Parameter]
    public List<BasicGameModel> BasicGameList { get; set; } = new();
    [Parameter]
    public TeamRecordModel[] RecordsArray { get; set; } = new TeamRecordModel[32];



    /// <summary>
    /// Selects a game to place a wager on and navigates to
    /// the create bet page
    /// </summary>
    /// <param name="gameId">
    /// int represents the id of game being selected
    /// </param>
    private void CreateBet(int gameId)
    {
        if(User is not null)
            navManager.NavigateTo($"/CreateBet/{gameId}");
        else
            navManager.NavigateTo("/MicrosoftIdentity/Account/SignIn", true);
    }

}